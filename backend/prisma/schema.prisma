// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
 model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  name        String
  role        Role         @default(USER)
  quizzes     Quiz[]       @relation("CreatedQuizzes")
  submissions Submission[]
  createdAt   DateTime @default(now())
}

model Quiz {
 id          String       @id @default(uuid())
  title       String
  createdBy   User         @relation("CreatedQuizzes", fields: [createdById], references: [id])
  createdById String
  questions   Question[]   
  submissions Submission[]
  deleted     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Question {
  id          String       @id @default(uuid())
  text        String
  points      Int      @default(1) 
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  quizId      String
  options     Option[]
}

model Option {
  id          String       @id @default(uuid())
  text        String
  isCorrect   Boolean 
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId  String
}

model Submission {
  id          String       @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  quizId      String
  answers     Json   
  score       Int     
  createdAt   DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}